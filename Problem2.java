import java.util.*;
public class Problem2 {
  /*  Each new term in the Fibonacci sequence is
  *   generated by adding the previous two terms.
  *   By starting with 1 and 2, the first 10 terms
  *   will be:
  *   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *   By considering the terms in the Fibonacci
  *   sequence whose values do not exceed four million,
  *   find the sum of the even-valued terms.
  */
  public static void main(String[] args) {
    final long MAX_FIB_NUMBER = 4_000_000L;

    List<Long> evenFibNumbers = getEvenFibNumbers(MAX_FIB_NUMBER);
    Long answer = sumList(evenFibNumbers);

    System.out.println("The answer is " + answer);
  }

  private static List<Long> getEvenFibNumbers(long upperBound) {
    List<Long> evenFibNumbers = new ArrayList<>();

    for (long firstTerm = 1L, secondTerm = 2L; secondTerm <= upperBound;) {
      if (secondTerm % 2 == 0) {
        evenFibNumbers.add(secondTerm);
      }

      long sum = firstTerm + secondTerm;
      firstTerm = secondTerm;
      secondTerm = sum;
    }
    return evenFibNumbers;
  }

  private static Long sumList(List<Long> listToSum) {
    long sum = 0L;
    for (Long number : listToSum) {
      sum += number;
    }
    return sum;
  }
}
